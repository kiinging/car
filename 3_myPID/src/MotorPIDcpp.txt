#include "MotorPID.h"
#include <cmath> // Add this line at the top of your MotorPID.cpp file


MotorPID::MotorPID(float kp, float ki, float kd) : kp(kp), ki(ki), kd(kd) {
    integral = 0;
    prevError = 0;
}

void MotorPID::compute(float targetRPM, MotorMgr& motor) {
    // Get current velocity in RPM
    float currentRPM = motor.getVelocity() * 60; // Assuming velocity is in ticks/s


    // Compute error
    float error = targetRPM - currentRPM;

    // Proportional term
    float Pout = kp * error;

    // Integral term
    integral += error;
    float Iout = ki * integral;

    // Derivative term
    float derivative = error - prevError;
    float Dout = kd * derivative;

    // Compute total output
    float output = Pout + Iout + Dout;
    prevError = error;

    // Set motor throttle
    motor.setThrottle(fabs(output) / 100.0, output > 0);
}

void MotorPID::setTunings(float kp, float ki, float kd) {
    this->kp = kp;
    this->ki = ki;
    this->kd = kd;
}
